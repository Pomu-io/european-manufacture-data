2024-10-28 12:49:08 [scrapy.utils.log] INFO: Scrapy 2.11.2 started (bot: europeanManufacture)
2024-10-28 12:49:08 [scrapy.utils.log] INFO: Versions: lxml 4.9.2.0, libxml2 2.9.13, cssselect 1.2.0, parsel 1.9.1, w3lib 2.2.1, Twisted 24.3.0, Python 3.10.10 (main, Jun 15 2024, 15:25:19) [Clang 15.0.0 (clang-1500.0.40.1)], pyOpenSSL 24.1.0 (OpenSSL 3.2.2 4 Jun 2024), cryptography 42.0.8, Platform macOS-14.1.1-arm64-arm-64bit
2024-10-28 12:49:08 [scrapy.addons] INFO: Enabled addons:
[]
2024-10-28 12:49:08 [asyncio] DEBUG: Using selector: KqueueSelector
2024-10-28 12:49:08 [scrapy.utils.log] DEBUG: Using reactor: twisted.internet.asyncioreactor.AsyncioSelectorReactor
2024-10-28 12:49:08 [scrapy.utils.log] DEBUG: Using asyncio event loop: asyncio.unix_events._UnixSelectorEventLoop
2024-10-28 12:49:08 [scrapy.extensions.telnet] INFO: Telnet Password: 3f735cb4629c4716
2024-10-28 12:49:08 [scrapy.middleware] INFO: Enabled extensions:
['scrapy.extensions.corestats.CoreStats',
 'scrapy.extensions.telnet.TelnetConsole',
 'scrapy.extensions.memusage.MemoryUsage',
 'scrapy.extensions.feedexport.FeedExporter',
 'scrapy.extensions.logstats.LogStats',
 'scrapy.extensions.throttle.AutoThrottle']
2024-10-28 12:49:08 [scrapy.crawler] INFO: Overridden settings:
{'AUTOTHROTTLE_ENABLED': True,
 'AUTOTHROTTLE_MAX_DELAY': 10,
 'AUTOTHROTTLE_START_DELAY': 1,
 'BOT_NAME': 'europeanManufacture',
 'CONCURRENT_REQUESTS': 4,
 'CONCURRENT_REQUESTS_PER_DOMAIN': 2,
 'CONCURRENT_REQUESTS_PER_IP': 16,
 'DOWNLOAD_DELAY': 3,
 'DUPEFILTER_CLASS': 'scrapy_splash.SplashAwareDupeFilter',
 'FEED_EXPORT_ENCODING': 'utf-8',
 'HTTPCACHE_STORAGE': 'scrapy_splash.SplashAwareFSCacheStorage',
 'LOG_FILE': 'LOGS/log_20241028_124908.txt',
 'NEWSPIDER_MODULE': 'europeanManufacture.spiders',
 'REQUEST_FINGERPRINTER_IMPLEMENTATION': '2.7',
 'SPIDER_MODULES': ['europeanManufacture.spiders'],
 'TWISTED_REACTOR': 'twisted.internet.asyncioreactor.AsyncioSelectorReactor',
 'USER_AGENT': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) '
               'AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Mobile '
               'Safari/537.36'}
2024-10-28 12:49:08 [scrapy.middleware] INFO: Enabled downloader middlewares:
['scrapy.downloadermiddlewares.offsite.OffsiteMiddleware',
 'scrapy.downloadermiddlewares.httpauth.HttpAuthMiddleware',
 'scrapy.downloadermiddlewares.downloadtimeout.DownloadTimeoutMiddleware',
 'scrapy.downloadermiddlewares.defaultheaders.DefaultHeadersMiddleware',
 'scrapy.downloadermiddlewares.useragent.UserAgentMiddleware',
 'scrapy.downloadermiddlewares.retry.RetryMiddleware',
 'scrapy.downloadermiddlewares.redirect.MetaRefreshMiddleware',
 'scrapy.downloadermiddlewares.redirect.RedirectMiddleware',
 'scrapy.downloadermiddlewares.cookies.CookiesMiddleware',
 'scrapy_splash.SplashCookiesMiddleware',
 'scrapy_splash.SplashMiddleware',
 'scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware',
 'scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware',
 'scrapy.downloadermiddlewares.stats.DownloaderStats']
2024-10-28 12:49:08 [scrapy.middleware] INFO: Enabled spider middlewares:
['scrapy.spidermiddlewares.httperror.HttpErrorMiddleware',
 'scrapy_splash.SplashDeduplicateArgsMiddleware',
 'scrapy.spidermiddlewares.referer.RefererMiddleware',
 'scrapy.spidermiddlewares.urllength.UrlLengthMiddleware',
 'scrapy.spidermiddlewares.depth.DepthMiddleware']
2024-10-28 12:49:08 [scrapy.middleware] INFO: Enabled item pipelines:
['europeanManufacture.pipelines.PerEuropeanManufacturePipeline']
2024-10-28 12:49:08 [scrapy.core.engine] INFO: Spider opened
2024-10-28 12:49:08 [scrapy.extensions.logstats] INFO: Crawled 0 pages (at 0 pages/min), scraped 0 items (at 0 items/min)
2024-10-28 12:49:08 [scrapy.extensions.telnet] INFO: Telnet console listening on 127.0.0.1:6027
2024-10-28 12:49:08 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:49:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/FRED-LAWTON-SON-LTD/00000004368198-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:49:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/FRED-LAWTON-SON-LTD/00000004368198-001.html>
{'VAT_number': -1,
 'about_us': 'Textile Manufacturing, Manufacture of machinery for textile, '
             'apparel and leather production',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '200-499',
 'europe_page_url': 'https://www.europages.co.uk/FRED-LAWTON-SON-LTD/00000004368198-001.html',
 'founded_time': -1,
 'key_words': 'Blankets, bedspreads, duvets and eiderdowns, Linen',
 'location': 'Meltham Mills, Meltham, Holmfirth HD9 4AY',
 'name': 'FRED LAWTON & SON LTD',
 'phone_number': '+441484855600',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:49:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/LESLIE-MARIE-INTERIORS/00000004268647-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:49:13 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:49:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/LESLIE-MARIE-INTERIORS/00000004268647-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/LESLIE-MARIE-INTERIORS/00000004268647-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': '7 Strathcona Close, Flackwell Heath, High Wycombe HP10 9NG',
 'name': 'LESLIE MARIE INTERIORS',
 'phone_number': '+441628530080',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:49:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/GEMMA-PROCESSING-LTD/00000004337320-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:49:17 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:49:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/GEMMA-PROCESSING-LTD/00000004337320-001.html>
{'VAT_number': -1,
 'about_us': 'Clothing & Fabrics - Mnfrs, Manufacture of other wearing apparel '
             'and accessories not elsewhere classified',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/GEMMA-PROCESSING-LTD/00000004337320-001.html',
 'founded_time': -1,
 'key_words': 'Technical textiles for the transport industry',
 'location': 'Unit F/Harbet Rd/Stonehill Business Pk, London N18 3QQ',
 'name': 'GEMMA PROCESSING LTD',
 'phone_number': '+442088842001',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:49:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/CALANGE-LTD/00000004228332-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:49:21 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:49:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/CALANGE-LTD/00000004228332-001.html>
{'VAT_number': -1,
 'about_us': 'Clothing & Fabrics - Mnfrs, Manufacture of other wearing apparel '
             'and accessories not elsewhere classified',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/CALANGE-LTD/00000004228332-001.html',
 'founded_time': -1,
 'key_words': 'Technical textiles for the transport industry',
 'location': 'PO Box 61, Stockport SK3 0AP',
 'name': 'CALANGE LTD',
 'phone_number': '+441614747097',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:49:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/JOI-LTD/00000004290662-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:49:25 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:49:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/JOI-LTD/00000004290662-001.html>
{'VAT_number': -1,
 'about_us': 'Clothing & Fabrics - Mnfrs, Manufacture of other wearing apparel '
             'and accessories not elsewhere classified',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/JOI-LTD/00000004290662-001.html',
 'founded_time': -1,
 'key_words': 'Technical textiles for the transport industry',
 'location': 'Building 3/Chiswick Park/566 Chiswick High Rd, London W4 5YA',
 'name': 'JOI LTD',
 'phone_number': '+442088498245',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:49:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/I-M-UPHOLSTERY/00000004307580-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:49:29 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:49:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/I-M-UPHOLSTERY/00000004307580-001.html>
{'VAT_number': -1,
 'about_us': 'Soft Furnishings - Mnfrs, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/I-M-UPHOLSTERY/00000004307580-001.html',
 'founded_time': -1,
 'key_words': 'Technical textiles for the transport industry',
 'location': 'Unit 1/Lion Complex/Willow St, Blackburn BB1 5NQ',
 'name': 'I M UPHOLSTERY',
 'phone_number': '+441254679700',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:49:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/MARTIN-TEXTILES/00000004247780-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:49:33 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:49:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/MARTIN-TEXTILES/00000004247780-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/MARTIN-TEXTILES/00000004247780-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': 'Union St, Wakefield WF1 3AD',
 'name': 'MARTIN TEXTILES',
 'phone_number': '+441924381712',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:49:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/FUTURE-FABRICS/00000004370160-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:49:37 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:49:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/FUTURE-FABRICS/00000004370160-001.html>
{'VAT_number': -1,
 'about_us': 'Textile Manufacturing, Manufacture of machinery for textile, '
             'apparel and leather production',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/FUTURE-FABRICS/00000004370160-001.html',
 'founded_time': -1,
 'key_words': 'Blankets, bedspreads, duvets and eiderdowns, Linen',
 'location': 'Unit 16/Riverwalk Business Park/Riverwalk Rd, Enfield EN3 7QN',
 'name': 'FUTURE FABRICS',
 'phone_number': '+442084433466',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:49:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/THE-CURTAIN-WORKSHOP/00000004438838-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:49:41 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:49:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/THE-CURTAIN-WORKSHOP/00000004438838-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/THE-CURTAIN-WORKSHOP/00000004438838-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': 'Bydemill Farm, Hannington, Swindon SN6 7RW',
 'name': 'THE CURTAIN WORKSHOP',
 'phone_number': '+441793765225',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:49:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/FABRIC-FASHION/00000004357580-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:49:45 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:49:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/FABRIC-FASHION/00000004357580-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/FABRIC-FASHION/00000004357580-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': '34 Lackaghboy Rd, Lackaghboy, Enniskillen BT74 4RL',
 'name': 'FABRIC FASHION',
 'phone_number': '+442866329388',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:49:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/PANNU-TEXTILES/00000004207149-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:49:48 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:49:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/PANNU-TEXTILES/00000004207149-001.html>
{'VAT_number': -1,
 'about_us': 'Clothing & Fabrics - Mnfrs, Manufacture of other wearing apparel '
             'and accessories not elsewhere classified',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/PANNU-TEXTILES/00000004207149-001.html',
 'founded_time': -1,
 'key_words': 'Technical textiles for the transport industry',
 'location': '180 Bridge Street West, Birmingham B19 2YT',
 'name': 'PANNU TEXTILES',
 'phone_number': '+441213333214',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:49:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/ORION-TEXTILES/00000004201250-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:49:52 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:49:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/ORION-TEXTILES/00000004201250-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/ORION-TEXTILES/00000004201250-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': 'Rear of 36 Hillside Road/Hillside Rd, Billericay CM11 2DA',
 'name': 'ORION TEXTILES',
 'phone_number': '+441268271273',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:49:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/DREAMTEX/GBR086342-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:49:55 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:49:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/DREAMTEX/GBR086342-001.html>
{'VAT_number': -1,
 'about_us': 'Textile Manufacturing, Manufacture of machinery for textile, '
             'apparel and leather production',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/DREAMTEX/GBR086342-001.html',
 'founded_time': -1,
 'key_words': 'Blankets, bedspreads, duvets and eiderdowns, Linen',
 'location': '4th Floor Brunswick Mill/Bradford Rd, Manchester M40 7EZ',
 'name': 'DREAMTEX',
 'phone_number': '+441612058721',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:50:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/RONA-DESIGN/00000004167495-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:50:00 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:50:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/RONA-DESIGN/00000004167495-001.html>
{'VAT_number': -1,
 'about_us': 'Clothing & Fabrics - Mnfrs, Manufacture of other wearing apparel '
             'and accessories not elsewhere classified',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/RONA-DESIGN/00000004167495-001.html',
 'founded_time': -1,
 'key_words': 'Technical textiles for the transport industry',
 'location': '54 Lawrence Rd, London N15 4EG',
 'name': 'RONA DESIGN',
 'phone_number': '+442088095317',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:50:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/ATLAS-MANUFACTURERS/00000004132899-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:50:03 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:50:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/ATLAS-MANUFACTURERS/00000004132899-001.html>
{'VAT_number': -1,
 'about_us': 'Clothing & Fabrics - Mnfrs, Manufacture of other wearing apparel '
             'and accessories not elsewhere classified',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/ATLAS-MANUFACTURERS/00000004132899-001.html',
 'founded_time': -1,
 'key_words': 'Technical textiles for the transport industry',
 'location': 'Unit 11/Houghton St, West Bromwich B70 6BW',
 'name': 'ATLAS MANUFACTURERS',
 'phone_number': '+441215537744',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:50:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/BV-TEXTILES-LTD/00000004223727-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:50:06 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:50:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/BV-TEXTILES-LTD/00000004223727-001.html>
{'VAT_number': -1,
 'about_us': 'Knitting Machines & Supplies, Manufacture of machinery for '
             'textile, apparel and leather production',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/BV-TEXTILES-LTD/00000004223727-001.html',
 'founded_time': -1,
 'key_words': 'Textiles - preparation, spinning and weaving machinery, '
              'Knitting machines and accessories - industrial',
 'location': '57 Craven St, Leicester LE1 4BX',
 'name': 'BV TEXTILES LTD',
 'phone_number': '+441162538296',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:50:08 [scrapy.extensions.logstats] INFO: Crawled 16 pages (at 16 pages/min), scraped 16 items (at 16 items/min)
2024-10-28 12:50:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/LYSSIA/00000004236710-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:50:09 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:50:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/LYSSIA/00000004236710-001.html>
{'VAT_number': -1,
 'about_us': 'Hats & Caps - Mnfrs, Manufacture of other wearing apparel and '
             'accessories not elsewhere classified',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/LYSSIA/00000004236710-001.html',
 'founded_time': -1,
 'key_words': 'Gloves, Hats and caps, Footwear',
 'location': '21 Oldbury Orchard, Churchdown, Gloucester GL3 2PU',
 'name': 'LYSSIA',
 'phone_number': '+441452856553',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:50:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/J-THOMAS-CO/00000004283071-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:50:12 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:50:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/J-THOMAS-CO/00000004283071-001.html>
{'VAT_number': -1,
 'about_us': 'Sewing Machines - Industrial, Manufacture of machinery for '
             'textile, apparel and leather production',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/J-THOMAS-CO/00000004283071-001.html',
 'founded_time': -1,
 'key_words': 'Paper - manufacturing machinery, Paper and cardboard '
              'manufacturing - machinery and equipment',
 'location': '6 Wilemans Clo, Earl Shilton, Leicester LE9 7GW',
 'name': 'J THOMAS & CO',
 'phone_number': '+441455842599',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:50:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/LYNDA-FINDLAY/00000004236491-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:50:16 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:50:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/LYNDA-FINDLAY/00000004236491-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/LYNDA-FINDLAY/00000004236491-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': '1 The Old Steading, Tannadice, Forfar DD8 3TD',
 'name': 'LYNDA FINDLAY',
 'phone_number': '+441307850333',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:50:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/N-J-FABRICS/00000004033287-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:50:19 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:50:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/N-J-FABRICS/00000004033287-001.html>
{'VAT_number': -1,
 'about_us': 'Soft Furnishings - Mnfrs, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/N-J-FABRICS/00000004033287-001.html',
 'founded_time': -1,
 'key_words': 'Fabrics, flame retardant fabrics, flame retardant polyester, '
              'anti microbial fabrics',
 'location': '7 Tunnel St, Huddersfield HD4 7EU',
 'name': 'N J FABRICS',
 'phone_number': '+441484667711',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': 'Distribution'}
2024-10-28 12:50:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/TRADITIONAL-INTERIORS/00000004080017-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:50:24 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:50:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/TRADITIONAL-INTERIORS/00000004080017-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/TRADITIONAL-INTERIORS/00000004080017-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': '19 Cambria Cr, Gravesend DA12 4NJ',
 'name': 'TRADITIONAL INTERIORS',
 'phone_number': '+441474365981',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:50:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/THE-SANDERSON-ROOM/00000004444986-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:50:28 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:50:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/THE-SANDERSON-ROOM/00000004444986-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/THE-SANDERSON-ROOM/00000004444986-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': '9-11 Edwards Walk, Maldon CM9 5PS',
 'name': 'THE SANDERSON ROOM',
 'phone_number': '+441621857217',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:50:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/ANTIQUE-TO-MODERN-INTERIORS-LTD/00000004125415-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:50:30 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:50:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/ANTIQUE-TO-MODERN-INTERIORS-LTD/00000004125415-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/ANTIQUE-TO-MODERN-INTERIORS-LTD/00000004125415-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': '32 Silksworth Row, Sunderland SR1 3QJ',
 'name': 'ANTIQUE TO MODERN INTERIORS LTD',
 'phone_number': '+441915674447',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:50:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/COMPLETE-CURTAIN-SERVICE/00000004427600-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:50:35 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:50:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/COMPLETE-CURTAIN-SERVICE/00000004427600-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/COMPLETE-CURTAIN-SERVICE/00000004427600-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': '35 Davenport Rd, Hazel Grove, Stockport SK7 4HA',
 'name': 'COMPLETE CURTAIN SERVICE',
 'phone_number': '+441614562369',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:50:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/VIBRANT-FASHIONS-LTD/00000004091058-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:50:38 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:50:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/VIBRANT-FASHIONS-LTD/00000004091058-001.html>
{'VAT_number': -1,
 'about_us': 'Clothing Accessory Mnfrs, Manufacture of other wearing apparel '
             'and accessories not elsewhere classified',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/VIBRANT-FASHIONS-LTD/00000004091058-001.html',
 'founded_time': -1,
 'key_words': 'Gloves, Hats and caps, Footwear',
 'location': '279 St. Saviours Rd, Leicester LE5 4HG',
 'name': 'VIBRANT FASHIONS LTD',
 'phone_number': '+441162742727',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:50:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/MANOR-PARK-TRADING/00000004244825-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:50:43 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:50:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/MANOR-PARK-TRADING/00000004244825-001.html>
{'VAT_number': -1,
 'about_us': 'Soft Furnishings - Mnfrs, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/MANOR-PARK-TRADING/00000004244825-001.html',
 'founded_time': -1,
 'key_words': 'Technical textiles for the transport industry',
 'location': '182 Garrison St, Birmingham B9 4BN',
 'name': 'MANOR PARK TRADING',
 'phone_number': '+441216837861',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:50:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/PATCO/00000004209037-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:50:46 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:50:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/PATCO/00000004209037-001.html>
{'VAT_number': -1,
 'about_us': 'Textile Manufacturing, Manufacture of machinery for textile, '
             'apparel and leather production',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': -1,
 'europe_page_url': 'https://www.europages.co.uk/PATCO/00000004209037-001.html',
 'founded_time': -1,
 'key_words': 'Blankets, bedspreads, duvets and eiderdowns, Linen',
 'location': 'Lowmoor Rd, Kirkby-in-Ashfield, Nottingham NG17 7NY',
 'name': 'PATCO',
 'phone_number': '+441623758440',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:50:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/JUSTINA-OF-LONDON-LTD/00000004292661-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:50:49 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:50:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/JUSTINA-OF-LONDON-LTD/00000004292661-001.html>
{'VAT_number': -1,
 'about_us': 'Clothing & Fabrics - Mnfrs, Manufacture of other wearing apparel '
             'and accessories not elsewhere classified',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/JUSTINA-OF-LONDON-LTD/00000004292661-001.html',
 'founded_time': -1,
 'key_words': 'Technical textiles for the transport industry',
 'location': 'Unit 6/Lockwood Pk/Mill Mead Rd, London N17 9QP',
 'name': 'JUSTINA OF LONDON LTD',
 'phone_number': '+442088013663',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:50:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/C-J-FABRICS/00000004224208-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:50:54 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:50:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/C-J-FABRICS/00000004224208-001.html>
{'VAT_number': -1,
 'about_us': 'Clothing & Fabrics - Mnfrs, Manufacture of other wearing apparel '
             'and accessories not elsewhere classified',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/C-J-FABRICS/00000004224208-001.html',
 'founded_time': -1,
 'key_words': 'Technical textiles for the transport industry',
 'location': '11 Norford Way, Rochdale OL11 5QS',
 'name': 'C & J FABRICS',
 'phone_number': '+441706633973',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:50:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/HUGH-WYLIE/00000004305376-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:50:57 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:50:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/HUGH-WYLIE/00000004305376-001.html>
{'VAT_number': -1,
 'about_us': 'Flags, Banners, Poles & Masts, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/HUGH-WYLIE/00000004305376-001.html',
 'founded_time': -1,
 'key_words': 'Fabrics, nonwoven',
 'location': '18 Mary St, Newtownards BT23 4DQ',
 'name': 'HUGH WYLIE',
 'phone_number': '+442891817251',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:51:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/MAYFIELD-YARNS/00000004249608-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:51:01 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:51:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/MAYFIELD-YARNS/00000004249608-001.html>
{'VAT_number': -1,
 'about_us': 'MAYFIELD YARNS is the leading supplier of high quality warped '
             "and twisted yarns in Europe and we deliver our yarns to Europe's "
             'leading weaving and yarn processing companies.\n'
             '\n'
             'As yarn manufacturers, we are specialised in continuous filament '
             'yarn processing and we have well established partnerships with '
             "many of the world's leading continuous filament manufacturers. \n"
             '\n'
             'We supply and process the full range of continuous filament '
             'yarns including polyamine, polyester, polyolefin, polyamide, '
             'aramids, cellulose and viscose. We can supply all types of yarn '
             'forms including flat, textured, mono-filament as well as yarns '
             'with enhanced performance properties such as heat stabilised and '
             'flame retardant yarns.\n'
             '\n'
             'MAYFIELD YARNS has remained committed to continuously investing '
             'in the newest technology and production techniques to create '
             'truly bespoke yarn products designed to meet the specific needs '
             'of our customers. Our weekly production is 0.5 ton (Yarn) and we '
             'can supply smaller quantities for designers. We use continuous '
             'filament only Nylon 66 Nylon 6 Polyester (Yarn).\n'
             '\n'
             'MAYFIELD YARNS is working closely with its clients to create new '
             'products and new techniques, from home furnishings and apparel, '
             'Suit Linings through to industrial, automotive and technical '
             'textiles and Broad Loom Weavers, Narrow Fabric Weavers, Hose '
             'Thread or Sewing thread end use.\n'
             '\n'
             '************************************************************************************\n'
             'Member of the LANCASHIRE TEXTILE MANUFACTURERS ASSOCIATION',
 'company_website': 'http://www.mayfieldyarns.co.uk',
 'country': 'United Kingdom',
 'delivery': 'Europe',
 'employee_number': '200-499',
 'europe_page_url': 'https://www.europages.co.uk/MAYFIELD-YARNS/00000004249608-001.html',
 'founded_time': '1987',
 'key_words': 'Threads and yarns',
 'location': 'Mayfield, Ashbourne DE6 2LH',
 'name': 'MAYFIELD YARNS',
 'phone_number': '+441335343521',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': 'Production'}
2024-10-28 12:51:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/ALANIC-GLOBAL-FINEST-CLOTHING-DISTRIBUTOR/00000004621590-430586001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:51:05 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:51:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/ALANIC-GLOBAL-FINEST-CLOTHING-DISTRIBUTOR/00000004621590-430586001.html>
{'VAT_number': -1,
 'about_us': 'ALANIC INTERNATIONAL™ is an apparel designer brand. ALANIC '
             'designs and markets women’s, men’s and kids apparel and a range '
             'of other products that are manufactured and marketed through an '
             'extensive network of licensing agreements and other arrangements '
             'worldwide. \n'
             '\n'
             'With the top-notch garment manufacturing brands arriving in the '
             'online arena, bulk shopping has become much easier. ALANIC '
             'INTERNATIONAL™ is one of those clothing distributors in USA, UK '
             'where you will find a vast range of garments that will suit your '
             'needs. They offer the latest selection of clothes for men, women '
             'and kids and they have dedicated a whole section to their '
             'premium athletic outfits. By logging into the online store, you '
             'can take a look at their collection.\n'
             '\n'
             'ALANIC INTERNATIONAL™ leverages art, design and technology to '
             'advance the business process, while continuing to pioneer '
             'industry standards of social and environmental responsibility in '
             'the workplace.',
 'company_website': 'http://www.alanicglobal.com/',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '1000+',
 'europe_page_url': 'https://www.europages.co.uk/ALANIC-GLOBAL-FINEST-CLOTHING-DISTRIBUTOR/00000004621590-430586001.html',
 'founded_time': -1,
 'key_words': 'WHOLESALE CLOTHING, Clothing accessories',
 'location': 'SWALEC Stadium Club Shop, Sophia Gardens CF11 9XR',
 'name': 'ALANIC GLOBAL - FINEST CLOTHING DISTRIBUTOR',
 'phone_number': '1000+',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': 'Distribution'}
2024-10-28 12:51:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/LNP-DISTRIBUTION-LTD/00000003923019-204790001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:51:07 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:51:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/LNP-DISTRIBUTION-LTD/00000003923019-204790001.html>
{'VAT_number': -1,
 'about_us': 'We are a UK-based company dealing with branded shoes / trainers '
             '/ used shoes / and apparel clothing from brands. We welcome any '
             'company from around the globe to contact us, we buy and sell. We '
             'buy any unwanted item as a liquidation or end of line or '
             'clearance from 1 pallet to a container full.',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': 'Worldwide',
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/LNP-DISTRIBUTION-LTD/00000003923019-204790001.html',
 'founded_time': '2010',
 'key_words': 'Training shoes, Hiking shoes, SHOE WHOLESALER, Footwear, Shoes, '
              'sports and leisure',
 'location': '27/28 Rothersthorpe Crescent, Farcotton, Northampton NN4 8JD',
 'name': 'LNP DISTRIBUTION LTD',
 'phone_number': '+4416049460640',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': 'Distribution'}
2024-10-28 12:51:08 [scrapy.extensions.logstats] INFO: Crawled 33 pages (at 17 pages/min), scraped 33 items (at 17 items/min)
2024-10-28 12:51:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/SALTIRE-TEAMWEAR/00000003963237-236620001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:51:12 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:51:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/SALTIRE-TEAMWEAR/00000003963237-236620001.html>
{'VAT_number': -1,
 'about_us': 'Our aim is to provide the best quality and stylish sports '
             'apparel and equipment to the serious sportsmen and sportswoman. '
             'With a vast selection from the most respected equipment '
             'providers (Joma, Mitre, Umbro, Canterbury to name a few) in the '
             'industry we not only supply our retail clients via our website '
             'we can also bespoke design and supply a range of branded sports '
             'apparel for your Team Tour or for you to secure sponsorship.',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/SALTIRE-TEAMWEAR/00000003963237-236620001.html',
 'founded_time': -1,
 'key_words': 'SPORTS EQUIPMENT, Sports articles',
 'location': 'Alloa Business Centre, Whins Road, Alloa FK10 3SA',
 'name': 'SALTIRE TEAMWEAR',
 'phone_number': '+441259726691',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': 'Distribution'}
2024-10-28 12:51:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/RAPANUI-CLOTHING/GBR281419-7573001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:51:16 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:51:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/RAPANUI-CLOTHING/GBR281419-7573001.html>
{'VAT_number': -1,
 'about_us': 'Wholesale organic clothing by Rapanui provides sustainable, '
             'organic and low carbon clothing personalised to your brand and '
             'business. For promo wear, company uniforms or retail our '
             'eco-friendly apparel provides the ideal solution for low carbon '
             'clothing.',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': -1,
 'europe_page_url': 'https://www.europages.co.uk/RAPANUI-CLOTHING/GBR281419-7573001.html',
 'founded_time': -1,
 'key_words': "Menswear, ready-made, wholesale organic clothing, men's and "
              "woman's wholesale organic clothing",
 'location': '7 Weavers Yard, Lane End Road, Bembridge PO35 5US',
 'name': 'RAPANUI CLOTHING',
 'phone_number': '+441983873430',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:51:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/MILLIKEN-FLOOR-COVERING/GBR002945-00101.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:51:20 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:51:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/MILLIKEN-FLOOR-COVERING/GBR002945-00101.html>
{'VAT_number': 1,
 'about_us': 'MILLIKEN is one of the world’s leading manufacturers of floor '
             'coverings for corporate, education, public space, retail, '
             'hospitality and leisure environments.  The floor covering market '
             'in Europe, the Middle East, India and Africa is serviced from '
             'MILLIKEN’s design and manufacturing facility in the North West '
             'of England. MILLIKEN has produced award winning carpet tiles '
             'from this location for over 25 years. \n'
             '\n'
             'With expertise across a breadth of disciplines, including '
             'specialty chemicals, floor covering, and performance and '
             'protective textiles and with over 35 manufacturing facilities '
             'located in the U.S., U.K., Belgium, France, China, India, and '
             'Australia, and other sales and service operations throughout the '
             'Americas, Europe, and Asia, MILLIKEN’s more than 7,000 '
             'associates work to deliver innovations that do good for the '
             'world, create new experiences, and build for the future. '
             'MILLIKEN serves a variety of industries including '
             'transportation, building & infrastructure, hospitality, '
             'industrial manufacturing, architecture, design and specialty '
             'chemicals.\n'
             '\n'
             'Concrete Cloth\n'
             'Endurance Fabrics\n'
             'Flame-Resistant Fabrics\n'
             'Industrial textiles\n'
             'Performance Apparel\n'
             'Protective fabrics\n'
             'Reinforcements\n'
             'Specialty Fabrics: Abrasives, Automotive, Hospitality, '
             'Healthcare, Labels, Theatrical and Industrial Fabrics\n'
             'Specialty Nonwovens textiles\n'
             'Table Linen\n'
             'Workwear Uniforms\n'
             '\n'
             '***************************************************************************\n'
             'Member of the LANCASHIRE TEXTILE MANUFACTURERS ASSOCIATION',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '200-499',
 'europe_page_url': 'https://www.europages.co.uk/MILLIKEN-FLOOR-COVERING/GBR002945-00101.html',
 'founded_time': '1920',
 'key_words': 'Textiles - preparation, spinning and weaving machinery, Floor '
              'covering, FLOOR COVERINGS, CARPET TILES',
 'location': 'Beech Hill Plant, Gidlow Lane, Wigan WN6 8RN',
 'name': 'MILLIKEN FLOOR COVERING',
 'phone_number': '+441942612777',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': 'Production'}
2024-10-28 12:51:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/AYYAZ-BEDDING/00000004136286-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:51:24 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:51:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/AYYAZ-BEDDING/00000004136286-001.html>
{'VAT_number': -1,
 'about_us': 'Beds, Bedding & Blankets, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': 'http://www.dreamzonebedding.com/',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/AYYAZ-BEDDING/00000004136286-001.html',
 'founded_time': -1,
 'key_words': 'Blankets, bedspreads, duvets and eiderdowns, Linen',
 'location': 'Sherborne St West, Salford M3 7LF',
 'name': 'AYYAZ BEDDING',
 'phone_number': '+441618341987',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:51:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/NOUVEAU-FABRICS-LTD/GBR006430-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:51:28 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:51:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/NOUVEAU-FABRICS-LTD/GBR006430-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': 'http://www.nouveaufabrics.co.uk',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/NOUVEAU-FABRICS-LTD/GBR006430-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': '54-58 Queens Rd, Doncaster DN1 2NH',
 'name': 'NOUVEAU FABRICS LTD',
 'phone_number': '+441302329601',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:51:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/MARINE-AGRICULTURAL-CLOTHING/00000004245759-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:51:32 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:51:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/MARINE-AGRICULTURAL-CLOTHING/00000004245759-001.html>
{'VAT_number': -1,
 'about_us': 'Protective Clothing - Industrial, Manufacture of other wearing '
             'apparel and accessories not elsewhere classified',
 'company_website': 'http://www.guycotten.co.uk',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/MARINE-AGRICULTURAL-CLOTHING/00000004245759-001.html',
 'founded_time': -1,
 'key_words': 'Gloves, Hats and caps, Footwear',
 'location': '157 St. Osyth Rd, Clacton-On-Sea CO15 3HD',
 'name': 'MARINE & AGRICULTURAL CLOTHING',
 'phone_number': '+441255475809',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:51:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/LEO-WORKWEAR/00000004268395-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:51:35 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:51:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/LEO-WORKWEAR/00000004268395-001.html>
{'VAT_number': 1,
 'about_us': 'Clothing & Fabrics - Mnfrs, Manufacture of other wearing apparel '
             'and accessories not elsewhere classified',
 'company_website': 'http://www.leoworkwear.com',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/LEO-WORKWEAR/00000004268395-001.html',
 'founded_time': '1981',
 'key_words': 'Fire-resistant clothing, HIGH VISIBILITY CLOTHING',
 'location': '1 Whiddon Dr, Barnstaple EX32 8RY',
 'name': 'LEO WORKWEAR',
 'phone_number': '+441271378904',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': 'Production'}
2024-10-28 12:51:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/NICHOLAS-HUNTER-LTD/00000004038700-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:51:39 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:51:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/NICHOLAS-HUNTER-LTD/00000004038700-001.html>
{'VAT_number': -1,
 'about_us': 'Badges & Emblems, Manufacture of other wearing apparel and '
             'accessories not elsewhere classified',
 'company_website': 'http://www.nicholashunter.com',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/NICHOLAS-HUNTER-LTD/00000004038700-001.html',
 'founded_time': -1,
 'key_words': 'Gloves, Hats and caps, Footwear',
 'location': '17 Chiltern Business Centre/Garsington Rd, Oxford OX4 6NG',
 'name': 'NICHOLAS HUNTER LTD',
 'phone_number': '+441865777365',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:51:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/WALCOTT-SOFT-FURNISHINGS-LTD/GBR045806-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:51:43 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:51:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/WALCOTT-SOFT-FURNISHINGS-LTD/GBR045806-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': 'https://walcottsoftfurnishingsltd.co.uk/',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/WALCOTT-SOFT-FURNISHINGS-LTD/GBR045806-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': 'Unit 1B/Venture Works/Charleywood Rd, Knowsley Ind Pk, Liverpool '
             'L33 7SG',
 'name': 'WALCOTT SOFT FURNISHINGS LTD',
 'phone_number': '+441515467017',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:51:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/FOXALL-INDUSTRIAL-SUPPLIES-LTD/00000004367342-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:51:47 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:51:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/FOXALL-INDUSTRIAL-SUPPLIES-LTD/00000004367342-001.html>
{'VAT_number': -1,
 'about_us': 'Protective Clothing - Industrial, Manufacture of other wearing '
             'apparel and accessories not elsewhere classified',
 'company_website': 'http://www.foxalls.co.uk',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/FOXALL-INDUSTRIAL-SUPPLIES-LTD/00000004367342-001.html',
 'founded_time': -1,
 'key_words': 'Gloves, Hats and caps, Footwear',
 'location': 'Unit 9/Millards Ind Est, West Bromwich B70 9BY',
 'name': 'FOXALL INDUSTRIAL SUPPLIES LTD',
 'phone_number': '+441215537937',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:51:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/VILLAGE-FABRICS-LTD/00000004091673-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:51:51 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:51:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/VILLAGE-FABRICS-LTD/00000004091673-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': 'http://www.village-fabrics.co.uk',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/VILLAGE-FABRICS-LTD/00000004091673-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': 'Churchill Rd, Bicester OX26 4PZ',
 'name': 'VILLAGE FABRICS LTD',
 'phone_number': '+441869244877',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:51:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/TAYLOR-ROYAL/00000004113599-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:51:54 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:51:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/TAYLOR-ROYAL/00000004113599-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': 'http://www.taylorroyal.co.uk',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/TAYLOR-ROYAL/00000004113599-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': '25 Princes Gdns, Peterborough PE1 4DP',
 'name': 'TAYLOR ROYAL',
 'phone_number': '+441733755218',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:51:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/TONY-INTERIORS/00000004451911-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:51:58 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:51:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/TONY-INTERIORS/00000004451911-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': 'https://tonyinteriors.co.uk/',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/TONY-INTERIORS/00000004451911-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': '64 Fore St, Bugle, St. Austell PL26 8PE',
 'name': 'TONY INTERIORS',
 'phone_number': '+441726852691',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:52:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/KOMILFO-HOLDING-LTD/00000005493726-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:52:02 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:52:02 [scrapy.core.scraper] ERROR: Spider error processing <GET https://www.europages.co.uk/KOMILFO-HOLDING-LTD/00000005493726-001.html via http://localhost:8050/render.html> (referer: None)
Traceback (most recent call last):
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/utils/defer.py", line 279, in iter_errback
    yield next(it)
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/utils/python.py", line 350, in __next__
    return next(self.data)
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/utils/python.py", line 350, in __next__
    return next(self.data)
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/core/spidermw.py", line 106, in process_sync
    for r in iterable:
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/middleware.py", line 162, in process_spider_output
    for el in result:
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/core/spidermw.py", line 106, in process_sync
    for r in iterable:
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/spidermiddlewares/referer.py", line 352, in <genexpr>
    return (self._set_referer(r, response) for r in result or ())
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/core/spidermw.py", line 106, in process_sync
    for r in iterable:
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/spidermiddlewares/urllength.py", line 27, in <genexpr>
    return (r for r in result or () if self._filter(r, spider))
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/core/spidermw.py", line 106, in process_sync
    for r in iterable:
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/spidermiddlewares/depth.py", line 31, in <genexpr>
    return (r for r in result or () if self._filter(r, response, spider))
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/core/spidermw.py", line 106, in process_sync
    for r in iterable:
  File "/Users/liuqiming/Desktop/pomu/europeanManufacture/europeanManufacture/spiders/perManufacturesSpider.py", line 118, in parse
    about_us = response.xpath('.//div[@data-test="description"]//text()').getall()[1]
IndexError: list index out of range
2024-10-28 12:52:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/HANGMAN-CURTAIN-BLINDS/00000004351816-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:52:05 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:52:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/HANGMAN-CURTAIN-BLINDS/00000004351816-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': 'http://www.thehangman.co.uk',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/HANGMAN-CURTAIN-BLINDS/00000004351816-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': '43 Yarmouth Rd, Blofield, Norwich NR13 4LE',
 'name': 'HANGMAN CURTAIN & BLINDS',
 'phone_number': '+441603713705',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:52:08 [scrapy.extensions.logstats] INFO: Crawled 48 pages (at 15 pages/min), scraped 47 items (at 14 items/min)
2024-10-28 12:52:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/CURTAIN-CREATIONS/00000004398446-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:52:09 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:52:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/CURTAIN-CREATIONS/00000004398446-001.html>
{'VAT_number': -1,
 'about_us': 'Soft Furnishings - Mnfrs, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': 'http://www.curtain-creations.com',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/CURTAIN-CREATIONS/00000004398446-001.html',
 'founded_time': -1,
 'key_words': 'Technical textiles for the transport industry',
 'location': '12 Conon Cr, Elgin IV30 1SZ',
 'name': 'CURTAIN CREATIONS',
 'phone_number': '+441343546478',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:52:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/BOONE-LANE-LTD/00000004059826-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:52:13 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:52:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/BOONE-LANE-LTD/00000004059826-001.html>
{'VAT_number': -1,
 'about_us': 'Hats & Caps - Mnfrs, Manufacture of other wearing apparel and '
             'accessories not elsewhere classified',
 'company_website': 'http://www.hatblockstore.co.uk',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/BOONE-LANE-LTD/00000004059826-001.html',
 'founded_time': -1,
 'key_words': 'Gloves, Hats and caps, Footwear',
 'location': '7-11 Taylor St, Luton LU2 0EY',
 'name': 'BOONE & LANE LTD',
 'phone_number': '+441582723224',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:52:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/PURPLE-CURTAIN-CO-LTD/00000004188146-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:52:17 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:52:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/PURPLE-CURTAIN-CO-LTD/00000004188146-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': 'https://purple-curtain-company-ltd.ueniweb.com/?utm_campaign=gmb#header',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/PURPLE-CURTAIN-CO-LTD/00000004188146-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': 'Sutton House/Guilden Sutton La, Guilden Sutton, Chester CH3 7EY',
 'name': 'PURPLE CURTAIN CO LTD',
 'phone_number': '+441244314454',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:52:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/R-S-WEST-LTD/00000004190804-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:52:20 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:52:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/R-S-WEST-LTD/00000004190804-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': 'http://www.rswest.co.uk/Welcome.html',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/R-S-WEST-LTD/00000004190804-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': 'Victoria Works/Hill End La, Rossendale BB4 7AG',
 'name': 'R & S WEST LTD',
 'phone_number': '+441706224877',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:52:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/WOOL-BLANKET-ONLINE/00000004072208-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:52:22 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:52:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/WOOL-BLANKET-ONLINE/00000004072208-001.html>
{'VAT_number': -1,
 'about_us': 'Beds, Bedding & Blankets, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': 'http://www.woolblanketonline.co.uk',
 'country': 'United Kingdom',
 'delivery': 'Worldwide',
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/WOOL-BLANKET-ONLINE/00000004072208-001.html',
 'founded_time': -1,
 'key_words': 'Blankets, bedspreads, duvets and eiderdowns, EMBROIDERED '
              'BLANKETS, WOOL BLANKET, WOOLLEN ACCESSORIES, BLANKETS',
 'location': 'Wilma, Roden, Telford TF66BQ',
 'name': 'WOOL BLANKET ONLINE',
 'phone_number': '+447824701232',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:52:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/PETER-LEES/00000004213841-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:52:27 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:52:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/PETER-LEES/00000004213841-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': 'http://www.swatchboxcurtains.co.uk',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/PETER-LEES/00000004213841-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': '25-27 Mesnes Rd, Wigan WN1 2DG',
 'name': 'PETER LEES',
 'phone_number': '+441942824001',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:52:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/CLOTH-WORLD/00000004424083-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:52:30 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:52:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/CLOTH-WORLD/00000004424083-001.html>
{'VAT_number': -1,
 'about_us': 'Curtains - Retailers & Makers, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': 'http://www.clothworld.co.uk',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/CLOTH-WORLD/00000004424083-001.html',
 'founded_time': -1,
 'key_words': 'Textile - import-export',
 'location': '10 Lower Cardiff Rd, Pwllheli LL53 5BY',
 'name': 'CLOTH WORLD',
 'phone_number': '+441758612311',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:52:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/CALZEAT-CO-LTD/00000004213864-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:52:34 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:52:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/CALZEAT-CO-LTD/00000004213864-001.html>
{'VAT_number': -1,
 'about_us': "Founded in 1974, Calzeat & Co Ltd is one of Scotland's premier "
             'manufacturers of high quality jacquard textile products and '
             'produce a wide range of fabrics and accessories which are sold '
             "throughout the world. We have become one of Britain's most "
             'renowned textile manufacturers and we have invested heavily in '
             'the most modern electronic production Jacquard weaving '
             'machinery, allied with computer aided design systems, which '
             'ensures we give our customers a highly innovative range of '
             'textile products. Calzeat started by selling wool fabric for '
             "men's neckties. Within 10 years it had developed a substantial "
             "business in men's and ladies apparel fabrics and accessories. "
             'Finally developing a home interiors collection in the mid '
             "1980's.",
 'company_website': 'http://www.calzeat.com',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/CALZEAT-CO-LTD/00000004213864-001.html',
 'founded_time': '1974',
 'key_words': 'WOOLLEN FABRICS, Fabrics, Scarves, jacquard textile products, '
              'apparel fabrics and accessories, Machine Wash Throws',
 'location': 'Old Station Yard, Symington, Biggar ML12 6LQ',
 'name': 'CALZEAT & CO LTD',
 'phone_number': '+441899309223',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': 'Production'}
2024-10-28 12:52:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/MADE-LONDON-INTERNATIONAL-LTD/00000005388251-706725001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:52:38 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:52:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/MADE-LONDON-INTERNATIONAL-LTD/00000005388251-706725001.html>
{'VAT_number': 1,
 'about_us': 'Made London designs, develops and distributes corporate apparel '
             'and merchandise within the Motorsport and Fitness sectors. \n'
             '\n'
             'Within the last year we have supplied Mercedes-Benz, FIA Formula '
             'E, Hankook, SKY, Virgin Active, W-Series and IMG to name but a '
             'few. \n'
             '\n'
             'Multi-Product Capability:\n'
             '- Prototyping, Sourcing & Global Manufacturing.\n'
             '- Compliance & Inspection.\n'
             '- Research & Development.\n'
             '\n'
             'Worldwide Delivery:\n'
             '- Multiple Sales & Distribution Channels.\n'
             '- Customisable and Integrated Logistics Systems.\n'
             '\n'
             'We have an Environmental conscience. We propose sustainable '
             'product solutions and encourage all our clients, to make the '
             'best environmental choices that support their brand strategy.\n'
             '\n'
             'Further information can be found on our website at '
             'www.made-london.com\n'
             '\n'
             'Please contact Matthew Chapman - mattc@made-london.com\n'
             '\n',
 'company_website': 'http://made-london.com/',
 'country': 'United Kingdom',
 'delivery': 'Worldwide',
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/MADE-LONDON-INTERNATIONAL-LTD/00000005388251-706725001.html',
 'founded_time': '2017',
 'key_words': 'Sportswear',
 'location': '2 Villiers Court, 40 Upper Mulgrave Road, Sutton SM2 7AJ',
 'name': 'MADE LONDON INTERNATIONAL LTD',
 'phone_number': -1,
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': 'Service'}
2024-10-28 12:52:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/ORBIT-APPAREL/00000004200749-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:52:42 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:52:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/ORBIT-APPAREL/00000004200749-001.html>
{'VAT_number': -1,
 'about_us': 'Clothing & Fabrics - Mnfrs, Manufacture of other wearing apparel '
             'and accessories not elsewhere classified',
 'company_website': 'http://www.apparel.com',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/ORBIT-APPAREL/00000004200749-001.html',
 'founded_time': -1,
 'key_words': 'Technical textiles for the transport industry',
 'location': 'Unit B6/Salcombe Rd, Alfreton DE55 7RG',
 'name': 'ORBIT APPAREL',
 'phone_number': '+441773832988',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:52:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/URBAN-APPAREL/00000005372808-685382001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:52:45 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:52:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/URBAN-APPAREL/00000005372808-685382001.html>
{'VAT_number': -1,
 'about_us': 'Urban Apparel is an online fashion store that specialises in UK '
             'street & designer brands. We offer low prices on a number of '
             'high-quality products from world-famous brands such as 4Bidden, '
             'Good For Nothing, Fresh Couture & more.',
 'company_website': 'https://urban-apparel.co.uk',
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/URBAN-APPAREL/00000005372808-685382001.html',
 'founded_time': -1,
 'key_words': 'Clothing - import-export',
 'location': 'Saltmeadows Road, Gateshead NE8 3AZ',
 'name': 'URBAN APPAREL',
 'phone_number': -1,
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:52:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/COSY-HOME-FURNISHINGS-LTD/00000004431982-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:52:49 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:52:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/COSY-HOME-FURNISHINGS-LTD/00000004431982-001.html>
{'VAT_number': -1,
 'about_us': 'Soft Furnishings - Mnfrs, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/COSY-HOME-FURNISHINGS-LTD/00000004431982-001.html',
 'founded_time': -1,
 'key_words': 'Technical textiles for the transport industry',
 'location': 'Premier House/Premier Rd, Manchester M8 8HE',
 'name': 'COSY HOME FURNISHINGS LTD',
 'phone_number': '+441618195145',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:52:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/ISKUR-MAKINA-MELIH-KALKAN/00000005480141-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:52:52 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:52:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/ISKUR-MAKINA-MELIH-KALKAN/00000005480141-001.html>
{'VAT_number': -1,
 'about_us': 'İşkur Makina - Melih Kalkan is one of the leading producter of '
             'textile manufacturing machinery needs and tools in our local '
             'market. Apart from textile industry, we produce certain '
             'lubricants for all kinds of machines and produce certain '
             'furniture types for home usage.',
 'company_website': 'https://www.konfeksiyon-market.com',
 'country': 'Türkiye',
 'delivery': 'Worldwide',
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/ISKUR-MAKINA-MELIH-KALKAN/00000005480141-001.html',
 'founded_time': '2015',
 'key_words': 'TEXTILE MACHINERY, FURNITURE, Clothing industry supplies, Tools '
              '& Hardware, SIMPLE STRAPPING',
 'location': 'Tekstilkent A25 No 12 Esenler/Istanbul, Istanbul 34235',
 'name': 'ISKUR MAKINA - MELIH KALKAN',
 'phone_number': '+908503463912',
 'product_amount': '10',
 'product_page_total': -1,
 'supplier_type': 'Production'}
2024-10-28 12:52:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/ACTIVE-INTERNATIONAL/00000005470020-843770001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:52:57 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:52:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.europages.co.uk/ACTIVE-INTERNATIONAL/00000005470020-843770001.html>
{'VAT_number': -1,
 'about_us': 'We carry out the international import and export of chemical '
             'products such as Sugar, Hydrogen Peroxide, Caustic Soda, '
             'petroleum products like Fuel Oil, Crude Oil, Diesel Fuel, EN '
             '590, Aviation Jet Fuel, Gasoline, as well as plastic and EVA '
             'slippers for men, women, and children, garden irrigation '
             'products, irrigation hoses, hand tools, garden furniture, rattan '
             'garden and seating groups, cushions, and pads.\n'
             '\n'
             'In addition to these, we also produce wood pellet products made '
             'from pine, oak, and birch, exporting them all over the world.\n'
             '\n'
             'We offer both wholesale and retail sales.',
 'company_website': 'https://active-international.net',
 'country': 'Türkiye',
 'delivery': 'Worldwide',
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/ACTIVE-INTERNATIONAL/00000005470020-843770001.html',
 'founded_time': -1,
 'key_words': 'Common wheat, Vegetable oils, Petrol, CERAMIC, Marble',
 'location': 'Kartaltepe mah. Sanli Asker sk. Sanli Asker Apt. No:16-8 '
             'Bakirkoy, Istanbul 34145',
 'name': 'ACTIVE INTERNATIONAL',
 'phone_number': '+902124833473',
 'product_amount': '9',
 'product_page_total': -1,
 'supplier_type': -1}
2024-10-28 12:53:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/DOGGYNDOG/00000005399520-728085001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:53:01 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:53:01 [scrapy.core.scraper] ERROR: Error processing {'VAT_number': -1,
 'about_us': 'Doggy & Dog Textile - Dog Wears & Accessories produced in '
             'TURKIYE. Our team produces a small amount of patented quality & '
             'hand crafted dog wear products in our fashion studio.Our team is '
             'a women entrepreneur.We make products for Small & Medium size of '
             'dogs.. We sell our dog products around the world. Our products '
             'made in textile industy zone BURSA / TURKIYE',
 'company_website': 'https://www.doggyndog.com',
 'country': 'Türkiye',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/DOGGYNDOG/00000005399520-728085001.html',
 'founded_time': -1,
 'key_words': 'Pet supplies',
 'location': 'BUTTIM Textile Center, Bursa 16040',
 'name': 'DOGGYNDOG',
 'phone_number': -1,
 'product_amount': '',
 'product_page_total': -1,
 'supplier_type': 'Production'}
Traceback (most recent call last):
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/twisted/internet/defer.py", line 1078, in _runCallbacks
    current.result = callback(  # type: ignore[misc]
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/utils/defer.py", line 340, in f
    return deferred_from_coro(coro_f(*coro_args, **coro_kwargs))
  File "/Users/liuqiming/Desktop/pomu/europeanManufacture/europeanManufacture/pipelines.py", line 121, in process_item
    self.cur.execute(f"""
psycopg2.errors.InvalidTextRepresentation: invalid input syntax for type integer: ""
LINE 7: ...ts made in textile industy zone BURSA / TURKIYE', '',  -1, '...
                                                             ^

2024-10-28 12:53:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/DANY-UND-SIMO-GMBH/00000003886859-179067001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:53:05 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:53:05 [scrapy.core.scraper] ERROR: Error processing {'VAT_number': -1,
 'about_us': 'Unser Motto: WENN ZEIT UND QUALITÄT VON BEDEUTUNG SIND\n'
             '\n'
             'Dany & Simo Ltd. ist ein diversifiziertes Unternehmen, das '
             'Erzeugnisse aus Polymeren, technischem Kunststoff und Kautschuk '
             'herstellt. Dazu nutzen wir das Spritzgießverfahren, das ein '
             'breites Spektrum an Technologien zur Bearbeitung von Polymeren '
             'abdeckt und eine sehr hohe Genauigkeit sowie ein ansprechendes '
             'Aussehen der Produkte gewährleistet.\n'
             '\n'
             'Das Unternehmen ist auf die Herstellung von Produkten für die '
             'Textilindustrie, Ersatzteile für die Leichtindustrie, '
             'Ingenieurdienstleistungen für Unterhaltungselektronik, '
             'Haushalts- und Küchengeräte spezialisiert.\n'
             '\n'
             'Wir bieten Komplettlösungen an – von der Projektierung und '
             'Herstellung des Spritzgießwerkzeuges (Formenbau), über das '
             'Spritzgießen bis hin zur Verpackung und Lieferung der fertigen '
             'Produkte.\n'
             '\n'
             'Die Mission unseres Unternehmens ist es, unsere Produkte in '
             'höchster Qualität und zu wettbewerbsfähigen Preisen anzubieten, '
             'ebenso wie Dienstleistungen, die die Erwartungen unserer Kunden '
             'absolut erfüllen. \n'
             '\n'
             'Zur Produktion von Kunststoffteilen verwendeten wir nur '
             'qualitativ hochwertige, sichere und zertifizierte '
             'thermoplastische Kunststoffe, die wir von renommierten '
             'Lieferanten beziehen.',
 'company_website': 'http://www.dsplast.eu',
 'country': 'Bulgaria',
 'delivery': 'Worldwide',
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/DANY-UND-SIMO-GMBH/00000003886859-179067001.html',
 'founded_time': -1,
 'key_words': 'Plastic products for the garment industry, INJECTION MOULDING '
              'OF PLASTICS, OFFICE STATIONERY',
 'location': 'Industrial Zone South, Kazanlak 6100',
 'name': 'DANY UND SIMO GMBH',
 'phone_number': '+359887489609',
 'product_amount': '6',
 'product_page_total': -1,
 'supplier_type': 'Production'}
Traceback (most recent call last):
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/twisted/internet/defer.py", line 1078, in _runCallbacks
    current.result = callback(  # type: ignore[misc]
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/utils/defer.py", line 340, in f
    return deferred_from_coro(coro_f(*coro_args, **coro_kwargs))
  File "/Users/liuqiming/Desktop/pomu/europeanManufacture/europeanManufacture/pipelines.py", line 121, in process_item
    self.cur.execute(f"""
psycopg2.errors.InFailedSqlTransaction: current transaction is aborted, commands ignored until end of transaction block

2024-10-28 12:53:08 [scrapy.extensions.logstats] INFO: Crawled 64 pages (at 16 pages/min), scraped 61 items (at 14 items/min)
2024-10-28 12:53:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/EMLYN-CANVAS-CORDAGE/00000004388363-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:53:09 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:53:09 [scrapy.core.scraper] ERROR: Error processing {'VAT_number': -1,
 'about_us': 'Tarpaulins, Manufacture of made-up textile articles, except '
             'apparel',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/EMLYN-CANVAS-CORDAGE/00000004388363-001.html',
 'founded_time': -1,
 'key_words': 'Canvas for blinds and covers',
 'location': 'George Street Conservatory Centre/Granville Sq, Newport NP20 2AB',
 'name': 'EMLYN CANVAS & CORDAGE',
 'phone_number': '+441633262262',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
Traceback (most recent call last):
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/twisted/internet/defer.py", line 1078, in _runCallbacks
    current.result = callback(  # type: ignore[misc]
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/utils/defer.py", line 340, in f
    return deferred_from_coro(coro_f(*coro_args, **coro_kwargs))
  File "/Users/liuqiming/Desktop/pomu/europeanManufacture/europeanManufacture/pipelines.py", line 121, in process_item
    self.cur.execute(f"""
psycopg2.errors.InFailedSqlTransaction: current transaction is aborted, commands ignored until end of transaction block

2024-10-28 12:53:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/D-B-TRACKS-BLINDS/00000004399331-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:53:13 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:53:14 [scrapy.core.scraper] ERROR: Error processing {'VAT_number': -1,
 'about_us': 'Soft Furnishings - Mnfrs, Manufacture of made-up textile '
             'articles, except apparel',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/D-B-TRACKS-BLINDS/00000004399331-001.html',
 'founded_time': -1,
 'key_words': 'Technical textiles for the transport industry',
 'location': 'Unit 2/Brookside Nursery/Church Rd, Swallowfield, Reading RG7 '
             '1TH',
 'name': 'D & B TRACKS & BLINDS',
 'phone_number': '+441189888551',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
Traceback (most recent call last):
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/twisted/internet/defer.py", line 1078, in _runCallbacks
    current.result = callback(  # type: ignore[misc]
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/utils/defer.py", line 340, in f
    return deferred_from_coro(coro_f(*coro_args, **coro_kwargs))
  File "/Users/liuqiming/Desktop/pomu/europeanManufacture/europeanManufacture/pipelines.py", line 121, in process_item
    self.cur.execute(f"""
psycopg2.errors.InFailedSqlTransaction: current transaction is aborted, commands ignored until end of transaction block

2024-10-28 12:53:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/IBERYA-TEKSTIL-SAN-VE-TIC-AS-US-POLO-ASSN-UNDERWEAR-AND-PAJAMAS/00000005482766-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:53:18 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:53:18 [scrapy.core.scraper] ERROR: Error processing {'VAT_number': -1,
 'about_us': 'Would you like to sell US POLO ASSN. branded products and bring '
             'the benefits of the USPA brand to your store or wholesale '
             'business?\n'
             '\n'
             'LICENSEE: U.S. POLO ASSN. the wholesaler, supplier, exporter and '
             'manufacturer of USPA pyjamas, underwear and homewear based in '
             'Istanbul, Turkey.\n'
             '\n'
             'Authorised to produce and commercialise products under the US '
             'Polo Assn. (USPA) brand in 82 countries including Eastern '
             'Europe, Africa, Asia, Gulf Countries.\n'
             '\n'
             'We also have our own brands; Mod Collection and Bonnie&Clyde.\n'
             '\n'
             'Established in 2003, Iberya Textiles, is a world class, '
             'replicable textile group known for contemporary, fashionable and '
             'well made underwear, loungewear and sleepwear collections.\n'
             '\n'
             'Based in Istanbul, Turkey, we adhere to the strictest '
             'manufacturing standards, which allows us to maintain optimum '
             'customer satisfaction levels. Our production department employs '
             'highly skilled workers with modern facilities that include the '
             'best quality cutting and sewing machines.\n'
             '\n'
             'Under our company we license; \n'
             "* U.S. Polo Assn. Women's Sleepwear & Underwear\n"
             '* U.S Polo Assn. Woman Underwear \n'
             "* U.S Polo Assn. Men's Sleepwear & Underwear\n"
             "* U.S Polo Assn. Men's Underwear \n"
             "* U.S Polo Assn. Men's Swimwear",
 'company_website': 'https://www.iberya.com.tr',
 'country': 'Türkiye',
 'delivery': 'Worldwide',
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/IBERYA-TEKSTIL-SAN-VE-TIC-AS-US-POLO-ASSN-UNDERWEAR-AND-PAJAMAS/00000005482766-001.html',
 'founded_time': '2003',
 'key_words': 'Clothing - import-export, WHOLESALE UNDERWEAR, BOXER SHORTS',
 'location': "Osmangazi Mahallesi Bilal'i Habeşi Caddesi No:24, No:24  "
             'sancaktepe, Istanbul 34885',
 'name': 'IBERYA TEKSTIL SAN VE TIC. AS - U.S. POLO ASSN. UNDERWEAR AND '
         'PAJAMAS',
 'phone_number': '+902165616050',
 'product_amount': '9',
 'product_page_total': -1,
 'supplier_type': 'Distribution'}
Traceback (most recent call last):
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/twisted/internet/defer.py", line 1078, in _runCallbacks
    current.result = callback(  # type: ignore[misc]
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/utils/defer.py", line 340, in f
    return deferred_from_coro(coro_f(*coro_args, **coro_kwargs))
  File "/Users/liuqiming/Desktop/pomu/europeanManufacture/europeanManufacture/pipelines.py", line 121, in process_item
    self.cur.execute(f"""
psycopg2.errors.InFailedSqlTransaction: current transaction is aborted, commands ignored until end of transaction block

2024-10-28 12:53:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/KIOXIK-MPM-TEXTILE-MANUFACTURERS-FOR-PROFESSIONAL-HAIRDRESSERS/00000005308275-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:53:22 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:53:22 [scrapy.core.scraper] ERROR: Error processing {'VAT_number': 1,
 'about_us': 'KIOXIK is a website dedicated for several years to the sale of '
             'clothing and textile accessories for hairdressers, where '
             'professionals can easily find everything they need for their '
             'business. With the headquarters located in Europe, we offer '
             'competitive service for fast deliveries across the continent. '
             'KIOXIK primarily focuses on selling towels for professionals, '
             'with black towels featuring an essential stain-resistant '
             'treatment for use with colorants, thus allowing for greater '
             'product durability. The towels are made of 100% cotton for '
             'better absorption; we use cotton because it is a 100% natural '
             'fiber that does not cause skin irritation for clients. The '
             'towels measure 50x83 cm with a weight of 350 gr/m2, which are '
             'the most requested characteristics worldwide. We also sell '
             'capes, gowns, and kimonos made of microfiber, a lightweight '
             'material that is easy to wash and resistant to laundering, '
             'providing great durability. The cape is adjustable with 3 snaps '
             'and measures 125x130 cm, while the gowns with sleeves are also '
             'adjustable with 3 snaps and measure: sleeves: 48 cm; Length: 1 '
             'm; back width: 65 cm. These products are treated with a '
             'waterproofing process so that water does not wet the client, and '
             'they also feature an anti-static treatment that is very '
             'important to prevent hair from sticking to the material. We also '
             'sell aprons made of polyurethane that are easy to wash, '
             'adjustable, and waterproof, making them suitable for use during '
             'color treatments by professionals. We work with major brands '
             'such as L’Oréal, Matrix, Redken, Kérastase, and Biolag.',
 'company_website': 'https://www.kioxik.com/en/',
 'country': 'Portugal',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/KIOXIK-MPM-TEXTILE-MANUFACTURERS-FOR-PROFESSIONAL-HAIRDRESSERS/00000005308275-001.html',
 'founded_time': -1,
 'key_words': 'Commercial and industrial linen',
 'location': 'Fábrica Asa, Estrada Nacional nº105 - H1.5, Guimarães 4835-157',
 'name': 'KIOXIK - MPM TEXTILE MANUFACTURERS FOR PROFESSIONAL HAIRDRESSERS',
 'phone_number': '+351253527490',
 'product_amount': '30',
 'product_page_total': '2',
 'supplier_type': 'Production'}
Traceback (most recent call last):
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/twisted/internet/defer.py", line 1078, in _runCallbacks
    current.result = callback(  # type: ignore[misc]
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/utils/defer.py", line 340, in f
    return deferred_from_coro(coro_f(*coro_args, **coro_kwargs))
  File "/Users/liuqiming/Desktop/pomu/europeanManufacture/europeanManufacture/pipelines.py", line 121, in process_item
    self.cur.execute(f"""
psycopg2.errors.InFailedSqlTransaction: current transaction is aborted, commands ignored until end of transaction block

2024-10-28 12:53:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/E-MOTION-BODIES-BRAND/00000005472014-847590001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:53:26 [py.warnings] WARNING: /Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2024-10-28 12:53:26 [scrapy.core.scraper] ERROR: Error processing {'VAT_number': 1,
 'about_us': 'E Motion Bodies Brand is a brand of professional high quality '
             "products for Dancers, Acrobats and Movers. We'v started with "
             'professional Dance Pants. E Motion Bodies is a project that '
             'seeks to create spaces for movement, body creativity and the '
             'expansion of consciousness. Dance, acrobatics, conscious '
             'movement, fresh and shared looks, learn together to fly with the '
             'gravity that passes through us in each of our cells ... all this '
             'is what E Motion Bodies wants to promote so that it becomes '
             'part, more and more, of our life adventure. We are convinced '
             'that we can transform our society if we allow our bodies to '
             'speak and express themselves more freely.We seek to help you '
             'fly, create, enjoy your body, share your movement and contact a '
             'growing world of movers and creators . We want to contribute to '
             'linking you to a life with a healthy, strong and flexible body, '
             'with a creative emotion, with a continuous sharing. Learn and '
             'explore together. The goal is not just to sell clothing or other '
             'technical items, but to generate inspiration so that each and '
             'everyone can create more and more spaces for movement and art. '
             'WE SEEK EXCELLENCEThe quality and functionality of E Motion '
             'Bodies products is the backbone where all our business vision is '
             'based. We believe that offering a product with exceptional '
             'quality is the best advertisement and you are our best '
             'ambassadors. WE MANUFACTURE IN BARCELONA',
 'company_website': 'https://www.emotionbodiesbrand.com',
 'country': 'Spain',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/E-MOTION-BODIES-BRAND/00000005472014-847590001.html',
 'founded_time': '2021',
 'key_words': 'DANCE PANTS, Dance wear',
 'location': 'Rabassa 5, Barcelona 08024',
 'name': 'E MOTION BODIES BRAND',
 'phone_number': -1,
 'product_amount': '2',
 'product_page_total': -1,
 'supplier_type': -1}
Traceback (most recent call last):
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/twisted/internet/defer.py", line 1078, in _runCallbacks
    current.result = callback(  # type: ignore[misc]
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/utils/defer.py", line 340, in f
    return deferred_from_coro(coro_f(*coro_args, **coro_kwargs))
  File "/Users/liuqiming/Desktop/pomu/europeanManufacture/europeanManufacture/pipelines.py", line 121, in process_item
    self.cur.execute(f"""
psycopg2.errors.InFailedSqlTransaction: current transaction is aborted, commands ignored until end of transaction block

2024-10-28 12:53:28 [scrapy.crawler] INFO: Received SIGINT, shutting down gracefully. Send again to force 
2024-10-28 12:53:28 [scrapy.core.engine] INFO: Closing spider (shutdown)
2024-10-28 12:53:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/AKSEM-BABY/00000005453829-798244001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:53:30 [scrapy.core.scraper] ERROR: Error processing {'VAT_number': -1,
 'about_us': 'We offer all kinds of baby clothing and textile accessories '
             'like: rompers, bodies, jackets, pants, vests, pyjamas, jackets, '
             'dresses, blankets, bibs, socks, shoes, towels, napkins, hats, '
             'gloves and all kinds of sets of products. Whatever you need, we '
             'can make it with your own company label.\n'
             'Aksem Baby is a Turkey-based firm with over ten years of '
             'experience in the industry. We are a leading producer and '
             'exporter of baby clothing for all ages. With the vision focused '
             "on providing high-quality products aimed at securing parents' "
             "trust while also considering baby's health, we have quickly "
             'become one of the 25 countries around the world that rely '
             'heavily upon us! Our production facilities cover 11,500m2 (1 '
             'acre), with 150 workers and 25 staff members employed here, '
             'including management positions like administrators who oversee '
             "administrative tasks necessary across an organisation's entire "
             'operation--all within their own factory walls. For over a '
             'decade, we have been producing baby clothes in the most modern '
             'way possible. We use only high-quality materials like 100% '
             'organic cotton and modal and follow every detail to make sure '
             'your children are safe from harmful chemicals while also being '
             'made with love by people who care for them just as much you do! '
             'We make highly organic outfits.\n'
             'With us, you can experience hassle-free shopping! Moreover, all '
             'processes take place at one facility - cutting machinery, '
             'printing presses, sewing equipment--anything needed on site is '
             'ours.',
 'company_website': 'https://www.aksembaby.com/',
 'country': 'Türkiye',
 'delivery': 'Europe',
 'employee_number': '100-199',
 'europe_page_url': 'https://www.europages.co.uk/AKSEM-BABY/00000005453829-798244001.html',
 'founded_time': '2021',
 'key_words': 'Baby clothes, Organic cotton',
 'location': 'Yunusemre Mahallesi, Dikencik Caddesi, No:5/A Yildirim, Bursa '
             '16350',
 'name': 'AKSEM BABY',
 'phone_number': -1,
 'product_amount': '9',
 'product_page_total': -1,
 'supplier_type': 'Production'}
Traceback (most recent call last):
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/twisted/internet/defer.py", line 1078, in _runCallbacks
    current.result = callback(  # type: ignore[misc]
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/utils/defer.py", line 340, in f
    return deferred_from_coro(coro_f(*coro_args, **coro_kwargs))
  File "/Users/liuqiming/Desktop/pomu/europeanManufacture/europeanManufacture/pipelines.py", line 121, in process_item
    self.cur.execute(f"""
psycopg2.errors.InFailedSqlTransaction: current transaction is aborted, commands ignored until end of transaction block

2024-10-28 12:53:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/TWEEDBANK-TEXTILE-CO/00000004084719-001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:53:35 [scrapy.core.scraper] ERROR: Error processing {'VAT_number': -1,
 'about_us': 'Tartans, Kilts & Accessories, Manufacture of other wearing '
             'apparel and accessories not elsewhere classified',
 'company_website': -1,
 'country': 'United Kingdom',
 'delivery': -1,
 'employee_number': '5-9',
 'europe_page_url': 'https://www.europages.co.uk/TWEEDBANK-TEXTILE-CO/00000004084719-001.html',
 'founded_time': -1,
 'key_words': 'Gloves, Hats and caps, Footwear',
 'location': '7-8 Tweedbank Craft Centre, Tweedbank, Galashiels TD1 3RU',
 'name': 'TWEEDBANK TEXTILE CO',
 'phone_number': '+441896750177',
 'product_amount': -1,
 'product_page_total': -1,
 'supplier_type': -1}
Traceback (most recent call last):
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/twisted/internet/defer.py", line 1078, in _runCallbacks
    current.result = callback(  # type: ignore[misc]
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/utils/defer.py", line 340, in f
    return deferred_from_coro(coro_f(*coro_args, **coro_kwargs))
  File "/Users/liuqiming/Desktop/pomu/europeanManufacture/europeanManufacture/pipelines.py", line 121, in process_item
    self.cur.execute(f"""
psycopg2.errors.InFailedSqlTransaction: current transaction is aborted, commands ignored until end of transaction block

2024-10-28 12:53:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/AKS-TEKSTIL/00000005399532-728100001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:53:37 [scrapy.core.scraper] ERROR: Error processing {'VAT_number': -1,
 'about_us': 'We Aks Tekstil has been in the textile business for 30 years. '
             'Products: Towel, bathrobe, peshtemal hammam towel, promotional '
             'towel, company logo towel, beach towel, baby hooded towel, '
             'sunbed towel, sauna towel, spa towel, healthcare towel, baby '
             'blanket, throw blanket, cotton towel, microfiber towel, digital '
             'printed towel, embroidered towel, jacquard border towel, yarn '
             'dye jacquard towel, double face towel, advertising towel, '
             'organic towel, terry towel, kids towel, poncho, massage towel, '
             'garden towel, gift towel, chair towel, wahglove, bath towel, '
             'picnic towel blanket, hooded towel, sanitary towel, medical '
             'towel, hair towel, hospital towel, lounge chair towel, fouta '
             'towel, beach skirt, kikoy towel, hand made towel, welness towel, '
             'yacht towel, bar towel, apron, golf towel, sport towel, fitness '
             'towel, velour towel, round towel, kitchen towel, embellished '
             'towel, serviette, drap de bain, drap de douche, handdoek, pyyhe, '
             'toalla, handduk, handtuch, tovallola, dvielis, prosop, uterak, '
             'asciugamano, Turkish towel, manufacturer, bath mat, jacquard '
             'towel, yarn dye jacquard towel, terry jaquard towel, jacuard '
             'border towel, relief woven towel, double pile towel, pareo, hair '
             'bonnet, custom design towel, pique bathrobe, waffle kimono '
             'bathrobe, vat dye towel, bathrobe, pique bathrobe, kimono '
             'bathrobe, shawlcollar bathrobe, baby hooded towel, bonnet, '
             'peshtamal, pestemal, hotel towel, bath mat, cosmetic towel, pool '
             'towel, tea towel, welness towel, multifunctional towel, '
             'pestamal, pestemalin',
 'company_website': 'http://www.akstex.com',
 'country': 'Türkiye',
 'delivery': 'Worldwide',
 'employee_number': '100-199',
 'europe_page_url': 'https://www.europages.co.uk/AKS-TEKSTIL/00000005399532-728100001.html',
 'founded_time': '2010',
 'key_words': 'TOWELS, Promotional Towels, Hammam Peshtemal, BATHROBE, Towels, '
              'bathroom',
 'location': 'selcukbey mah 533 sk no:9, Merkezefendi 20030',
 'name': 'AKS TEKSTIL',
 'phone_number': '+902583610181',
 'product_amount': '10',
 'product_page_total': -1,
 'supplier_type': 'Production'}
Traceback (most recent call last):
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/twisted/internet/defer.py", line 1078, in _runCallbacks
    current.result = callback(  # type: ignore[misc]
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/utils/defer.py", line 340, in f
    return deferred_from_coro(coro_f(*coro_args, **coro_kwargs))
  File "/Users/liuqiming/Desktop/pomu/europeanManufacture/europeanManufacture/pipelines.py", line 121, in process_item
    self.cur.execute(f"""
psycopg2.errors.InFailedSqlTransaction: current transaction is aborted, commands ignored until end of transaction block

2024-10-28 12:53:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.europages.co.uk/TAILPETZ/00000005377641-691157001.html via http://localhost:8050/render.html> (referer: None)
2024-10-28 12:53:41 [scrapy.core.scraper] ERROR: Error processing {'VAT_number': -1,
 'about_us': 'Established in 2017, TAILPETZ® is a Turkish pet products '
             'manufacturer. For us, color and pattern make all the difference; '
             'it identifies and expresses a personal style on TAILPETZ® '
             'harnesses, collars, and leashes are a very alternative way of '
             'expressing the personalities of our pets.\n'
             '\n'
             'We serve over 1100+ sales points in our pet shops, veterinary '
             'clinics, pet grooming saloons, and regional dealers in Turkey. '
             'With our distributorships in 5 different countries, our annual '
             'production capacity is 800.000 on a piece basis.\n'
             '\n'
             'Our production selection for cats and dogs includes: \n'
             '\n'
             '•Harnesses: Airmesh, Norwegian, H-type harnesses, \n'
             '•Collars: H-type collars, \n'
             '•Leashes in different colors and designs. \n'
             '\n'
             'Our mission is to produce quality, prestige, and trust in our '
             'business relations by combining them with our manufacturing '
             'culture. Our goal is to reach all around the world with our '
             'manufacturing culture and own products.\n'
             '\n'
             'Our designs are for all kinds of pet body sizes and reduce '
             'pressure. In addition, we use lightweight, air-permeable '
             'Air-Mesh outer in our product materials. Finally, we do our best '
             "to protect our pets' body temperatures by using the structure of "
             'fabrics, which does not raise the temperature in all seasons. \n'
             '\n'
             'Do not hesitate to contact us for more information!',
 'company_website': 'https://www.tailpetz.com/en/',
 'country': 'Türkiye',
 'delivery': 'Worldwide',
 'employee_number': '20-49',
 'europe_page_url': 'https://www.europages.co.uk/TAILPETZ/00000005377641-691157001.html',
 'founded_time': '2019',
 'key_words': 'PET WEAR, COLLARS, ACCESSORIES FOR PETS, LEASHES, PET COLLARS, '
              'LEATHER COLLARS FOR PETS, harness design, Pet products '
              'manufacturers, Pet supplies, Dogs and cats - articles for, dog '
              'accessory, Dog collar, Dog apparel',
 'location': 'Yakuplu Mahallesi 134. Sokak No:4/A Beylikduzu, Istanbul 34524',
 'name': 'TAILPETZ',
 'phone_number': 'Established in 2017, TAILPETZ® is a Turkish pet products '
                 'manufacturer. For us, color and pattern make all the '
                 'difference; it identifies and expresses a personal style on '
                 'TAILPETZ® harnesses, collars, and leashes are a very '
                 'alternative way of expressing the personalities of our '
                 'pets.\n'
                 '\n'
                 'We serve over 1100+ sales points in our pet shops, '
                 'veterinary clinics, pet grooming saloons, and regional '
                 'dealers in Turkey. With our distributorships in 5 different '
                 'countries, our annual production capacity is 800.000 on a '
                 'piece basis.\n'
                 '\n'
                 'Our production selection for cats and dogs includes: \n'
                 '\n'
                 '•Harnesses: Airmesh, Norwegian, H-type harnesses, \n'
                 '•Collars: H-type collars, \n'
                 '•Leashes in different colors and designs. \n'
                 '\n'
                 'Our mission is to produce quality, prestige, and trust in '
                 'our business relations by combining them with our '
                 'manufacturing culture. Our goal is to reach all around the '
                 'world with our manufacturing culture and own products.\n'
                 '\n'
                 'Our designs are for all kinds of pet body sizes and reduce '
                 'pressure. In addition, we use lightweight, air-permeable '
                 'Air-Mesh outer in our product materials. Finally, we do our '
                 "best to protect our pets' body temperatures by using the "
                 'structure of fabrics, which does not raise the temperature '
                 'in all seasons. \n'
                 '\n'
                 'Do not hesitate to contact us for more information!',
 'product_amount': '51',
 'product_page_total': '4',
 'supplier_type': 'Production'}
Traceback (most recent call last):
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/twisted/internet/defer.py", line 1078, in _runCallbacks
    current.result = callback(  # type: ignore[misc]
  File "/Users/liuqiming/.pyenv/versions/3.10.10/lib/python3.10/site-packages/scrapy/utils/defer.py", line 340, in f
    return deferred_from_coro(coro_f(*coro_args, **coro_kwargs))
  File "/Users/liuqiming/Desktop/pomu/europeanManufacture/europeanManufacture/pipelines.py", line 121, in process_item
    self.cur.execute(f"""
psycopg2.errors.InFailedSqlTransaction: current transaction is aborted, commands ignored until end of transaction block

2024-10-28 12:53:41 [scrapy.extensions.feedexport] INFO: Stored json feed (61 items) in: LOGS/output_.json
2024-10-28 12:53:41 [scrapy.statscollectors] INFO: Dumping Scrapy stats:
{'downloader/request_bytes': 54448,
 'downloader/request_count': 73,
 'downloader/request_method_count/POST': 73,
 'downloader/response_bytes': 122075704,
 'downloader/response_count': 73,
 'downloader/response_status_count/200': 73,
 'elapsed_time_seconds': 272.888388,
 'feedexport/success_count/FileFeedStorage': 1,
 'finish_reason': 'shutdown',
 'finish_time': datetime.datetime(2024, 10, 28, 16, 53, 41, 818675, tzinfo=datetime.timezone.utc),
 'item_scraped_count': 61,
 'log_count/DEBUG': 137,
 'log_count/ERROR': 12,
 'log_count/INFO': 16,
 'log_count/WARNING': 69,
 'memusage/max': 124715008,
 'memusage/startup': 70696960,
 'response_received_count': 73,
 'scheduler/dequeued': 146,
 'scheduler/dequeued/memory': 146,
 'scheduler/enqueued': 146,
 'scheduler/enqueued/memory': 146,
 'spider_exceptions/IndexError': 1,
 'splash/render.html/request_count': 73,
 'splash/render.html/response_count/200': 73,
 'start_time': datetime.datetime(2024, 10, 28, 16, 49, 8, 930287, tzinfo=datetime.timezone.utc)}
2024-10-28 12:53:41 [scrapy.core.engine] INFO: Spider closed (shutdown)
